# -*- coding: utf-8 -*-
"""M2_W1_Ex1_Numpy - Exercise

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fMGL4JbM6S561gK6o_rw8B44Be2Io9fz
"""

import numpy as np
arr = np.arange(0, 10, 1)
arr

import numpy as np
arr = np . ones ((3 ,3) ) > 0
arr

import numpy as np
arr = np . ones ((3 ,3) , dtype = bool )
arr

import numpy as np
arr = np . full ((3 ,3) , fill_value = True , dtype = bool )
arr

import numpy as np
arr = np . arange (0 ,10)
print ( arr [ arr %2 == 1])

import numpy as np
arr = np . arange (0 ,10)
arr [ arr %2 ==1] = -1
print ( arr )

import numpy as np
arr = np . arange (10)
arr_2d = arr . reshape (2 , -1)
print ( arr_2d )

import numpy as np
arr1 = np . arange (10) . reshape (2 , -1)
arr2 = np . repeat (1 ,10) . reshape (2 , -1)
c = np . concatenate ([ arr1 , arr2 ] , axis =0)
print (" Result : \n", c )

import numpy as np
arr1 = np . arange (10) . reshape (2 , -1)
arr2 = np . repeat (1 ,10) . reshape (2 , -1)
c = np . concatenate ([ arr1 , arr2 ] , axis =1)
print ("C = ", c )

import numpy as np
arr = np . array ([1 ,2 ,3])
print ( np . repeat ( arr ,3) )
print ( np . tile ( arr ,3) )

import numpy as np
a = np . array ([2 ,6 ,1 ,9 ,10 ,3 ,27])
index = np . where ((a >=5) &( a <=10) )
print (" result ", a [ index ])

import numpy as np

def maxx (x , y ) :
    if x >= y:
        return x
    else:
        return y

a = np.array([5, 7, 9, 8, 6, 4, 5])
b = np.array([6, 3, 4, 8, 9, 7, 1])

pair_max = np . vectorize ( maxx , otypes =[ float ])
print ( pair_max (a , b ) )

import numpy as np

a = np . array ([5 ,7 ,9 ,8 ,6 ,4 ,5])
b = np . array ([6 ,3 ,4 ,8 ,9 ,7 ,1])

print (" Result ", np . where (a <b , b , a ) )