# -*- coding: utf-8 -*-
"""M7-W3-3-Open-Vocab-Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-37a_hdaUKMhLOynNEf3alQY-jAyLxV7
"""

!pip install ultralytics

!pip install loguru

from ultralytics import YOLOWorld
from ultralytics.engine.results import Boxes

# Import từ tệp utils.py tại /content
from utils import save_detection_results

# Khởi tạo mô hình YOLO-World với trọng số đã được huấn luyện trước
model = YOLOWorld("yolov8s-world.pt")

# Định nghĩa các lớp tùy chỉnh
model.set_classes(["bus"])  # Chỉ định lớp 'bus' là lớp cần phát hiện

# Thực hiện dự đoán trên một hình ảnh
results: Boxes = model.predict("/content/bus.jpg")

!pip install opencv-python

import cv2  # Đảm bảo đã import OpenCV

# Hiển thị kết quả dự đoán cho đối tượng đầu tiên trong danh sách kết quả
results[0].show()  # Hiển thị hình ảnh với các hộp bao quanh các đối tượng

# Lưu kết quả vào tệp
output_path = 'output_bus.jpg'
cv2.imwrite(output_path, results[0].plot())  # Lưu hình ảnh đã xử lý vào tệp

from ultralytics import YOLOWorld
from ultralytics.engine.results import Boxes
from utils import save_detection_results

# Khởi tạo mô hình YOLO-World với trọng số đã huấn luyện trước
model = YOLOWorld("yolov8x-world.pt")

# Định nghĩa các lớp đối tượng cần phát hiện
model.set_classes(["phone", "mask", "glasses"])  # Lớp cần phát hiện

# Thực hiện dự đoán trên hình ảnh
results: Boxes = model.predict(
    "/content/vietnam-3.jpg", max_det=100, iou=0.01, conf=0.01
)

# Lưu kết quả phát hiện dưới dạng hình ảnh
save_detection_results(results)

# Hiển thị kết quả dự đoán cho đối tượng đầu tiên trong danh sách kết quả
results[0].show()  # Hiển thị hình ảnh với các hộp bao quanh các đối tượng

# Lưu kết quả vào tệp
output_path = 'output_bus.jpg'
cv2.imwrite(output_path, results[0].plot())  # Lưu hình ảnh đã xử lý vào tệp