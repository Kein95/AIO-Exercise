# -*- coding: utf-8 -*-
"""ÔN LUYỆN CHO MODUL 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j3ovaULkcx38Dh9EFAqFOCToYIBYbYAc

Ngày 4 : 2D List - Convolutional calculation:
https://drive.google.com/file/d/13Uk6uldvZQi8DoumXfspBqsljMPzJPXf/view
"""

# Define the matrices
mat_a = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]

kernal_b = [
    [2, 4],
    [1, 3]
]

# Function to perform convolution
def convolution(mat, kernel):
    m, n = len(mat), len(mat[0])
    km, kn = len(kernel), len(kernel[0])
    result = []

    for i in range(m - km + 1):
        row = []
        for j in range(n - kn + 1):
            sum = 0
            for ki in range(km):
                for kj in range(kn):
                    sum += mat[i + ki][j + kj] * kernel[ki][kj]
            row.append(sum)
        result.append(row)

    return result

# Perform convolution
result_b = convolution(mat_a, kernal_b)
print("Câu 1:", result_b)

kernal_c = [
    [1, 1, 1],
    [0, 0, 0],
    [1, 1, 1]
]

# Perform convolution
result_c = convolution(mat_a, kernal_c)
print("Câu 2:", result_c)