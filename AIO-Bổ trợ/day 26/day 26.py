# -*- coding: utf-8 -*-
"""ÔN LUYỆN CHO MODUL 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j3ovaULkcx38Dh9EFAqFOCToYIBYbYAc

# Ngày 26: SQL
https://drive.google.com/file/d/1PwVzLvtSrQrDG9Q1_nJLsC17HtuDGi3F/view

# Bước 1: Tạo và kết nối cơ sở dữ liệu
"""

import sqlite3

# Kết nối tới cơ sở dữ liệu SQLite (tạo mới nếu chưa có)
conn = sqlite3.connect('clothing_store.db')
cursor = conn.cursor()

print("Connected to SQLite")

"""# Bước 2: Tạo các bảng trong cơ sở dữ liệu"""

# Tạo bảng Category
cursor.execute('''
CREATE TABLE IF NOT EXISTS Category (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Status BOOLEAN
);
''')

# Tạo bảng Product
cursor.execute('''
CREATE TABLE IF NOT EXISTS Product (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Status BOOLEAN,
    Price REAL,
    SalePrice REAL,
    CreatedDate DATE,
    CategoryId INTEGER,
    FOREIGN KEY (CategoryId) REFERENCES Category(Id)
);
''')

# Tạo bảng Customer
cursor.execute('''
CREATE TABLE IF NOT EXISTS Customer (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Email TEXT,
    Phone TEXT,
    Address TEXT,
    CreatedDate DATE,
    Gender BOOLEAN,
    BirthDay DATE
);
''')

# Tạo bảng Orders
cursor.execute('''
CREATE TABLE IF NOT EXISTS Orders (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    CustomerId INTEGER NOT NULL,
    Status BOOLEAN,
    OrderDate DATETIME,
    FOREIGN KEY (CustomerId) REFERENCES Customer(Id)
);
''')

# Tạo bảng OrderDetail
cursor.execute('''
CREATE TABLE IF NOT EXISTS OrderDetail (
    OrderId INTEGER NOT NULL,
    ProductId INTEGER NOT NULL,
    Quantity INTEGER NOT NULL,
    Price REAL NOT NULL,
    PRIMARY KEY (OrderId, ProductId),
    FOREIGN KEY (OrderId) REFERENCES Orders(Id),
    FOREIGN KEY (ProductId) REFERENCES Product(Id)
);
''')

conn.commit()

print("Tables created successfully")

"""# Bước 3: Thêm dữ liệu mẫu vào các bảng"""

# 1. Dữ liệu mẫu cho bảng Category:
categories = [
    ('Quần áo nam', True),
    ('Quần áo nữ', True),
    ('Phụ kiện', True),
    ('Giày dép', True),
    ('Khác', True)
]

cursor.executemany('''
INSERT INTO Category (Name, Status)
VALUES (?, ?);
''', categories)

conn.commit()

print("Sample data added to Category table")

# 2. Dữ liệu mẫu cho bảng Product:
products = [
    ('Áo sơ mi nam', True, 300000, 270000, '2024-08-01', 1),
    ('Quần tây nam', True, 500000, 450000, '2024-08-02', 1),
    ('Đầm nữ', True, 600000, 540000, '2024-08-03', 2),
    ('Giày cao gót', True, 700000, 630000, '2024-08-04', 4),
    ('Mũ lưỡi trai', True, 150000, 135000, '2024-08-05', 3),
    ('Thắt lưng da', True, 250000, 225000, '2024-08-06', 3),
    ('Áo phông nữ', True, 200000, 180000, '2024-08-07', 2),
    ('Giày thể thao nam', True, 800000, 720000, '2024-08-08', 4),
    ('Túi xách nữ', True, 1200000, 1080000, '2024-08-09', 3),
    ('Váy dạ hội', True, 1500000, 1350000, '2024-08-10', 2),
    ('Áo khoác nam', True, 900000, 810000, '2024-08-11', 1),
    ('Áo len nữ', True, 400000, 360000, '2024-08-12', 2),
    ('Quần jean nam', True, 600000, 540000, '2024-08-13', 1),
    ('Đồng hồ đeo tay', True, 2000000, 1800000, '2024-08-14', 3),
    ('Kính râm', True, 350000, 315000, '2024-08-15', 3)
]

cursor.executemany('''
INSERT INTO Product (Name, Status, Price, SalePrice, CreatedDate, CategoryId)
VALUES (?, ?, ?, ?, ?, ?);
''', products)

conn.commit()

print("Sample data added to Product table")

# 3. Dữ liệu mẫu cho bảng Customer:
customers = [
    ('Nguyễn Văn A', 'nguyenvana@example.com', '0123456789', '123 Đường A, Hà Nội', '2024-08-01', True, '1990-01-01'),
    ('Trần Thị B', 'tranthib@example.com', '0987654321', '456 Đường B, TP.HCM', '2024-08-02', False, '1992-05-10'),
    ('Lê Văn C', 'levanc@example.com', '0112233445', '789 Đường C, Đà Nẵng', '2024-08-03', True, '1988-11-20')
]

cursor.executemany('''
INSERT INTO Customer (Name, Email, Phone, Address, CreatedDate, Gender, BirthDay)
VALUES (?, ?, ?, ?, ?, ?, ?);
''', customers)

conn.commit()

print("Sample data added to Customer table")

# 4. Dữ liệu mẫu cho bảng Orders:
orders = [
    (1, True, '2024-08-05 10:00:00'),
    (2, True, '2024-08-06 11:00:00'),
    (3, True, '2024-08-07 12:00:00')
]

cursor.executemany('''
INSERT INTO Orders (CustomerId, Status, OrderDate)
VALUES (?, ?, ?);
''', orders)

conn.commit()

print("Sample data added to Orders table")

# 5. Dữ liệu mẫu cho bảng OrderDetail:
order_details = [
    (1, 1, 2, 540000),  # OrderId 1 - ProductId 1
    (1, 2, 1, 450000),  # OrderId 1 - ProductId 2
    (2, 3, 1, 540000),  # OrderId 2 - ProductId 3
    (2, 5, 3, 405000),  # OrderId 2 - ProductId 5
    (3, 4, 1, 630000),  # OrderId 3 - ProductId 4
    (3, 6, 2, 450000)   # OrderId 3 - ProductId 6
]

# Chèn dữ liệu vào bảng OrderDetail, chỉ khi cặp OrderId và ProductId chưa tồn tại
for detail in order_details:
    try:
        cursor.execute('''
        INSERT INTO OrderDetail (OrderId, ProductId, Quantity, Price)
        VALUES (?, ?, ?, ?);
        ''', detail)
    except sqlite3.IntegrityError:
        print(f"Skipped duplicate entry for OrderId {detail[0]} and ProductId {detail[1]}")

conn.commit()

print("Sample data added to OrderDetail table without duplicates")

"""# Bước 4: Thực hiện các truy vấn SQL"""

# 1. Truy vấn danh sách sản phẩm sắp xếp giảm dần theo giá:
cursor.execute('''
SELECT p.Id, p.Name, p.Price, p.SalePrice, p.Status, c.Name AS CategoryName, p.CreatedDate
FROM Product p
JOIN Category c ON p.CategoryId = c.Id
ORDER BY p.Price DESC;
''')

products = cursor.fetchall()
for product in products:
    print(product)

# 2. Truy vấn danh sách các danh mục sản phẩm:
cursor.execute('''
SELECT c.Id, c.Name, COUNT(p.Id) AS TotalProduct, c.Status
FROM Category c
LEFT JOIN Product p ON c.Id = p.CategoryId
GROUP BY c.Id, c.Name, c.Status;
''')

categories = cursor.fetchall()
for category in categories:
    print(category)

# 3. Truy vấn danh sách khách hàng với tuổi và giới tính:
cursor.execute('''
SELECT Id, Name, Email, Phone, Address, CreatedDate, Gender,
       BirthDay,
       (strftime('%Y', 'now') - strftime('%Y', BirthDay)) AS Age
FROM Customer;
''')

customers = cursor.fetchall()
for customer in customers:
    print(customer)

"""# Bước 5: Đóng kết nối"""

conn.close()
print("SQLite connection is closed")