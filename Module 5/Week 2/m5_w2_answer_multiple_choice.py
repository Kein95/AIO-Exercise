# -*- coding: utf-8 -*-
"""M5_W2_ANSWER_MULTIPLE_CHOICE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15TiPVWtWciXa8sxGOhMWMPGVP8eJOvUN
"""

import numpy as np

# Q5

# Kết quả dự đoán từ mô hình
y_hat = np.array([0.4, 0.15, 0.05, 0.4])

# Nhãn thực tế
y = np.array([1, 0, 0, 0])

# Tính toán cross-entropy loss
loss = -np.sum(y * np.log(y_hat))
loss = round(loss, 3)  # Làm tròn đến hàng thập phân thứ 3

print("Cross-Entropy Loss:", loss)

# Q6

# Bộ giá trị tuyến tính Z
Z = np.array([-1, -2, 3, 2])

# Tính toán hàm Softmax
exp_Z = np.exp(Z - np.max(Z))  # Trừ max để tránh tràn số
softmax_output = exp_Z / exp_Z.sum()

# Làm tròn kết quả đến hàng thập phân thứ 3
softmax_output = np.round(softmax_output, 3)

print("Softmax Probabilities:", softmax_output)

# Q8
# Kết quả dự đoán và kết quả thực tế
y_hat = np.array([0, 1, 3, 2, 0, 2, 1, 2])
y = np.array([0, 0, 3, 2, 1, 2, 2, 1])

# Tính toán độ chính xác
accuracy = np.mean(y_hat == y)
accuracy = round(accuracy, 3)  # Làm tròn đến hàng thập phân thứ 3

print("Accuracy:", accuracy)